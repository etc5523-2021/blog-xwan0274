---
title: "ETC5521 Assignment 1"
subtitle: "Study of the Survivor TV Show in the US"
team: [rakali]
author:
  - [Smriti Vinayak Bhat]
  - [Xinrui Wang]
date: "`r Sys.Date()`"
output: 
  html_document
---

[This assignment is for ETC5521 Assignment 1 by Team `r rmarkdown::metadata$team` comprising of `r knitr::combine_words(rmarkdown::metadata$author)`.]{style="color:#006DAE;"}

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
library(tidyverse)
library(kableExtra)
library(plotly)
library(broom)
library(visdat)
library(ggResidpanel)
```


# Introduction and Motivation

[Survivor](https://en.wikipedia.org/wiki/Survivor_(American_TV_series)) is a popular reality competition television series in the United States premiered in 2000, it has been filmed for 40 seasons, 596 episodes until 2020. The show places a group of strangers in an isolated location, where they have to provide essential supply for themselves and survive through multiple physical and mental challenges. The last remaining castaways will be became the 'Sole Survivor', and will also be awarded substantial amount of money as the grand prize. 

Data is collected for castaways, seasons, vote histories and viewer records etc. across all 40 seasons in the past 20 years. Interests in exploring winner attributes and viewer ratings is widely shared, this report aims to find the demographic and individual characteristics that may help the castaways become the winner, explore the relationship between challenge winning and elimination, and how different stage of each season attracts viewer interests and affect ratings. The findings would potentially benefit people who are interested in participating and winning the prize in Survivor, as well as the producers who are interested in attracting more audiences.

Analysis conducted in this report and conclusions drawn are solely based on the data sets under data description section, with the assumption that all data used are correctly and accurately recorded. Variables that are not included in the mentioned data sets are not considered in analysis, as well as the missing values, which may lead to biased conclusions. Additional data sets could be introduced from different sources in further researches.

# Data Description

Data sets used in this report are retrieved from Github Tidy Tuesday created by Mock (2021), originally from the 'survivoR' R package that created by Oehm (2021), it contains a collection of **five data sets** detailing all 40 seasons of the US Survivor TV show from 2000 to 2020, including:

- **summary**: summary details for each of the 40 seasons of Survivor, including winner information, filming location and runner ups
- **castaways**: demographic details of each castaway in each season, and corresponding season related information such as result and tribe
- **challenges**: immunity and reward challenge results for each season, including season, episode, winner names and tribes etc.
- **viewers**: viewer information for every episode across all 40 seasons, including rating and number of viewers etc.
- **jury_votes**: history of jury votes for the finalists in each season

According to Oehm (2021), the data was originally collected almost entirely from [Wikipedia](https://en.wikipedia.org/wiki/Survivor_(American_TV_series)), it falls under MIT License, which means use, copy, modify and publish of the data are allowed without limitation or restriction. Data sets are already in tidy form, however, further tidy method and wrangling have been performed as stated below:

1. Irrelevant variables in the data sets, such as 'title' in 'viewers', and unused data set (jury_votes) are removed to avoid unnecessary distractions
2. New data set 'winner' is created through left join 'castaways' with 'summary' by season_name, season and full_name for analysis purpose

Description of variables in each data set after wrangling are shown below:

**summary**

|Variable             |Data Type |Description |
|:--------------------|:---------|:-----------|
|season_name          |character |Name of season |
|season               |integer   |Season number |
|premiered            |double    |Premiered date |
|ended                |double    |Ended date |
|viewers_premier      |double    |Viewers (millions) at premier |
|viewers_finale       |double    |Viewers (millions) at finale |
|viewers_reunion      |double    |Viewers (millions) for reunion |

**castaways**

|Variable             |Data Type |Description |
|:--------------------|:---------|:-----------|
|season_name          |character |Name of season |
|season               |integer   |Season number |
|day                  |double    |Day of season |
|full_name            |character |Full name of castaway |
|castaway             |character |First name of castaway |
|order                |integer   |Order |
|result               |character |Result in the season of castaway|

**challenges**

|Variable             |Data Type |Description |
|:--------------------|:---------|:-----------|
|season_name          |character |Name of season |
|season               |integer   |Season number |
|episode              |double    |Episode number |
|challenge_type       |character |Challenge type |
|winners              |character |Winners names |

**viewers**

|Variable             |Data Type |Description |
|:--------------------|:---------|:-----------|
|season_name          |character |Name of season |
|title                |character |Name of episode |
|season               |integer   |Season number |
|episode              |double    |Episode number |
|episode_date         |double    |Date of the episode |
|rating_18_49         |double    | Rating by viewers aged 18-49 |

**winner**

|Variable             |Data Type |Description |
|:--------------------|:---------|:-----------|
|season_name          |character |Name of season |
|season               |integer   |Season number |
|location             |character |Filming location |
|country              |character |Filming country |
|full_name            |character |Full name of castaway |
|castaway             |character |First name of castaway |
|age                  |double    |Age of castaway |
|city                 |character |Origin city of castaway |
|state                |character |Origin state of castaway |
|personality_type     |character |Personality type of castaway |
|result               |character |Result in the season of castaway|
|original_tribe       |character |Original tribe of castaway |
|swapped_tribe        |character |Swapped tribe (if applicable) |
|swapped_tribe2       |character |Swapped tribe for the second time (if applicable) |
|merged_tribe         |character |Merged tribe |
|total_votes_received |double    |Total votes received |
|immunity_idols_won   |double    |Immunity idols won |


The questions to be explored in this report are:

**1. What characteristics help the participants win (age, personality type, city/state)?**

**2. Does winning a reward and/or immunity attract hatred from other participants and lead to elimination?**

**3. Which one among the premier, finale and reunion generates the most views among audience, and how does that affect the rating?**


```{r}
castaways <- read_csv("Data/castaways.csv")
challenges <- read_csv("Data/challenges.csv")
jury_votes <- read_csv("Data/jury_votes.csv")
summary <- read_csv("Data/summary.csv")
viewers <- read_csv("Data/viewers.csv")
```


# Analysis and Findings

## Question 1: What characteristics help the participants win?

### Methods

```{r}
winner <- summary %>% 
  select(season_name, season, location, country, full_name ) %>% 
  left_join(castaways,
            by = c("full_name", "season_name", "season")) %>% 
  select(-c(day, order, jury_status))
  
```

**New data set winner is created** by join 'summary' and 'castaways' together by full_name, season_name and season,so that demographics of the winners and corresponding season details are in the same data set for exploration of the commonly shared characteristics, and what factors contributing to their success among the winners across 40 seasons.

There are three areas of interests in terms of the contributing factors of winning the Survivor game:

- **age**

- **city and/or state**

- **personality type**


```{r results='hide'}
glimpse(winner)
```

```{r results='hide'}
winner %>% 
  filter(is.na(castaway)) %>% 
  select(season_name,
         season,
         full_name,
         castaway,
         age,
         city,
         personality_type,
         result)
```

### Data Checking

Two issues have been discovered through data checking:

1. The 'winner' data frame has `r nrow(winner)` rows whereas there are only 40 seasons, indicates **duplication in data frame**
2. **Castaway details** for winner of season 18: James Thomas is **missing**

```{r results='hide'}
duplicated(winner$season)
```

Through further exploration, it turns out the the first issues is caused by an unusual situation occurred in Survivor: Chris Underwood, who was the winner of season 38, was actually voted out in the 3rd round but made huge moves later and became the winner (Ross, 2019). This issues is therefore solved by removing the record where the result was '3rd voted out' for season 38.

```{r}
winner %>% 
  filter(season == "38") %>% 
  select(season_name,
         season,
         full_name,
         castaway,
         result) %>% 
  kable() %>% 
  kable_styling()
  
```

The second issue was resolved by first checking whether James Thomas was recorded in 'castaways', it turns out James was recorded as 'James Thomas Jr.' in 'castaways' instead of 'James Thomas' as recorded in 'summary', which results in loss of information when joining these two data sets. The issue is then solved by matching the full_name and re-perform the join process.  

```{r}
castaways %>% 
  filter(season == "18") %>% 
  filter(grepl("James", full_name)) %>% 
  select(season_name,
         season,
         full_name,
         castaway,
         age,
         city,
         personality_type,
         result) %>% 
  kable() %>% 
  kable_styling()
```

```{r}
castaways$full_name[which(castaways$full_name == "James Thomas Jr.")] = "James Thomas"
winner <- summary %>% 
  select(season_name, season, location, country, full_name ) %>% 
  left_join(castaways,
            by = c("full_name", "season_name", "season")) %>%
  filter(result != "3rd voted out") %>% 
  select(-c(day, order, jury_status))
```


### Age

The bar plot below suggest that **majority of the winners are aged from 20 to 40**. Among the 40 winners, only three are aged over 40 and one of them is `r max(winner$age, na.rm = TRUE)` years old. The finding is not surprising given that people in this age group are most likely peak in both physical and mental conditions. 

```{r}
age_dist <- winner %>% 
  ggplot(aes(x = age)) +
  geom_bar(fill="#1E90FF") +
  labs(x = "Age",
       title = "Distribution of Winner's Age") +
  theme_bw()

ggplotly(age_dist)
```

Calculations have be performed to find out the percentage of winners among all castaways from each age group, the bar plot below proves the findings above. It is obvious that winners from age group of 30 to 40 and 20 to 30 not only have higher number of winners, but also have higher percentage of winners. Therefore, **age does seem to be a significant characteristic to winning, people aged between 20 to 40 have higher probabilities of winning.**

```{r}
age_ct <- winner %>% 
  mutate(age_group = cut(age, breaks = c(0,20,30,40,50,60,70,80))) %>% 
  count(age_group) %>% 
  rename("win" = n) 

age_per <- castaways %>%
  mutate(age_group = cut(age, breaks = c(0,20,30,40,50,60,70,80))) %>% 
  count(age_group) %>% 
  right_join(age_ct, by = "age_group") %>% 
  mutate(per_win = win/n * 100)
 
per_age <- age_per %>% 
  arrange(-per_win) %>%
  ggplot(aes(x = reorder(age_group, -per_win), 
             y = per_win,
             fill = age_group)) +
  geom_col() +
  labs(x = "Age Group",
       y = "Percentage of winner (%)",
       title = "Percentage of Winner by Age Group") +
  theme_bw() +
  scale_fill_brewer(palette="Paired")

ggplotly(per_age)
```

### City and/or State

Both city and state of where the winners are from are considered, however, the table below suggests that except two winners are come from the same city and state, the other 38 winners are all from different cities. There is no obvious evidence that origin city has an influence on winning in Survivor, and hence state is then being analysed to explore potential possibilities. 

```{r}
winner %>% 
  group_by(state) %>% 
  count(city) %>% 
  arrange(-n) %>% 
  kable(col.names = c("Sate", "City", "Count"),
        align = "c",
        caption = "Count of Winner's Origin City") %>% 
  kable_styling() %>%
  scroll_box(width = "100%", height = "200px")
```

In terms of state, the table below demonstrates that 8 out of 40 winners are from California, accounts for 20% of the winners. 4 winners are from New Jersey, and there are 3 winners from both New York and Pennsylvania. The total number of winners from just these four states is 18, that is almost half of the winners across 40 seasons. Lowa, Massachusetts, Texas and Utah each has two winners come from that state, added up to 26 winners all together, whereas the rest of states only has one winner each.

```{r}
winner %>% 
  group_by(state) %>% 
  count(state) %>% 
  arrange(-n) %>% 
  kable(col.names = c("State", "Count"),
        align = "c",
        caption = "Count of Winner's Origin City & State") %>% 
  kable_styling()%>%
  scroll_box(width = "100%", height = "200px")
```

It seems that castaways from California win most often in Survivor, however, no conclusion can be drawn without exploring the percentage of winners among total castaways in the show from each state.

The bar plot below demonstrates a clearer picture regarding percentage of winners, a surprising finding is that although only two winners are from Lowa, Lowa actually has the highest percentage of over 20%, which means for castaways from Lowa, there is at least one winner among every five of them. Although having only one winner each, Arkansas and Idaho also has over 20% winners among all castaways from each state. California, although having the highest number of winners, the percentage of winners from this state is lower than 10%. The high number of winners may due to the larger population and higher number of total castaways from related states. 

```{r}
win_ct <- winner %>% 
  group_by(state) %>% 
  count(state) %>% 
  rename("win" = n) 

win_per <- castaways %>%
  group_by(state) %>% 
  count(state) %>%
  right_join(win_ct, by = "state") %>% 
  mutate(per_win = win/n * 100)
 
win_state <- win_per %>% 
  arrange(-per_win) %>%
  filter(per_win > 10) %>% 
  ggplot(aes(x = reorder(state, -per_win), 
             y = per_win)) +
  geom_col(fill="#1E90FF") +
  labs(x = "State",
       y = "Percentage of winner (%)",
       title = "Percentage of Winner - States with more than 10% only") +
  theme_bw() +
  scale_fill_brewer(palette="Paired") +
  theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust = 1))

ggplotly(win_state)
```

Based on the findings above, it seems that city is not a significant contributing factor to winning, in terms of state, although there are states with higher number of winners or higher percentage of winners among total castaways, there is **no convincing evidence to prove that castaways from certain state are more likely to win.**

### Personality Type

The two bar plots below compare the number of winners with percentage of winners among all castaways by personality type. It is obvious that people with personality type of **ESTP, ENTP, INFJ and ENFJ** are most likely to become the winners in both plots, although the order is slightly different. 

```{r}
pt1 <- winner %>%
  count(personality_type) %>%
  na.omit(personality_type) %>% 
  ggplot(aes(x = reorder(personality_type, -n), 
             y = n)) +
  geom_col(fill="#1E90FF")+
  labs(x = "Personality Type",
       y = "Count",
       title = "Number of Winner by Personality Type") +
  theme_bw()

ggplotly(pt1)
```

```{r}
pt_ct <- winner %>% 
  group_by(personality_type) %>% 
  count(personality_type) %>% 
  rename("win" = n) 

pt_per <- castaways %>%
  group_by(personality_type) %>% 
  count(personality_type) %>%
  right_join(pt_ct, by = "personality_type") %>% 
  mutate(per_win = win/n * 100)
 
pt2 <- pt_per %>% 
  na.omit(personality_type) %>%
  arrange(-per_win) %>%
  ggplot(aes(x = reorder(personality_type, -per_win), 
             y = per_win)) +
  geom_col(fill="#1E90FF") +
  labs(x = "Personality Type",
       y = "Percentage of winner (%)",
       title = "Percentage of Winner") +
  theme_bw()

ggplotly(pt2)
```

In addition, the order in both count and percentage for the other 12 personality types also follow a similar pattern, which further confirms that **personality type is a significant characteristic to become a winner in Survivor.** People with personality type of **ESTP, ENTP, INFJ and ENFJ** are more likely to win compare with the other personality types.

## Question 2: Does winning a reward and/or immunity attract hatred from other participants and lead to elimination?

### Methods

-   Begin with taking a closer look at the correlation between total number of wins achieved by each participant and how that has impacted the order in which they have left the show.
-   For this a **linear model is simulated between total number of wins (rewards and immunity) and the order of leaving the show**.
-   Next thing to do is to see **whether at the final round the winner has been selected on merit or not.**

### Analysis

Below table lists the output of the first step. The relationship between number of wins achieved by each participant is visualized to check if it has impacted the order in which they have left the show.

```{r}
challenges <- read_csv("Data/question2/challenges_tidy.csv")

winners_summary <- challenges %>%
  group_by(season_name, season, challenge_type, winners) %>%
  summarise(Wins = n()) %>%
  pivot_wider(names_from = challenge_type, values_from = Wins) %>%
  mutate(castaway = winners) %>%
  select(-winners)

envy <- read_csv("Data/question2/castaways_tidy.csv")

envy <- envy %>%
  left_join(winners_summary, by = c("season_name", "season", "castaway")) %>%
  rowwise() %>%
  mutate(wins_tot = sum(reward, immunity, na.rm = TRUE)) %>%
  pivot_longer(cols = c(immunity, reward), names_to = "challenge_type", values_to = "Wins")

envy_lm <- envy %>%
  select(wins_tot, order) %>%
  lm(wins_tot ~ ., data = .)
tidy(envy_lm) %>%
  kable(digits = 2, caption = "Summary of Components of Model") %>%
  kable_styling()

glance(envy_lm) %>%
  select(r.squared, statistic) %>%
  kable(digits = 3, caption = "Model Summaries of Interest") %>%
  kable_styling()
```

It is visible that the model shows the total number of challenges won and order of elimination are loosely correlated in general. There is some discreteness also visible with the observations being in a striped manner vertically. $$R^2 = 0.509$$ means that **order of leaving the show explains 50% of the variance in total number of wins**. 

In order to further investigate the relationship between these two variables, a linear model is constructed between number of wins achieved by each participant and the order of leaving show. To further understand the linear model, a scatter plot is also constructed to check the correlation between the two.

```{r}
p1 <- envy %>%
  ggplot(aes(x = wins_tot, order)) + 
  geom_point() + 
  geom_jitter() +
  geom_smooth(method = "lm", colour = "blue") +
  theme_bw() +
  ylab("Order of Leaving Show") +
  xlab("Total wins") +
  ggtitle("Relationship Between Number of Wins and Order of Leaving Show")

ggplotly(p1)
```

In the plot it is visible that while the values are not grouped together as closely as might be appropriate for a strong association, they do show a **weak positive relationship**. Now that the association is understood and visualised, the final step is to see whether at the final round the challenge winners are more likely to be selected on merit or not.

```{r}

finalists <- envy %>%
  filter(str_detect(result, "unner") |
           str_detect(result, "limin") |
           str_detect(result, "Survivor"))

max <- finalists %>%
  group_by(season_name, season) %>%
  summarise(wins_tot = max(wins_tot)) %>%
  left_join(finalists,
            by = c("wins_tot", "season_name", "season")) %>%
  select(-c(challenge_type, Wins)) %>%
  unique() %>%
  group_by(result) %>%
  summarise(`number of series`= n())

p2 <- max %>%
  ggplot(aes(x = `number of series`, y = reorder(result, `number of series`))) + 
  geom_col(fill="#1E90FF") +
  theme_bw() +
  ylab("Result") +
  xlab("Number of Seasons") +
  ggtitle("The Result of Participant with Maximum Awards for the Season")

ggplotly(p2)
```

The bar graph shows that **for the most part, the Sole Survivor (or the winner) is the person with the most wins through the show**. There is however also **a sizable number of times that the runner-up is the one with the most wins**. What is curious however is that **there have been instances where the person with the most wins has been directly eliminated**. But it is **not a significant enough number** to be held as a proof. So the reasons for elimination could be anything from envy to anger as a result of personal grudges.

## Question 3:  Which one among the premier, finale and reunion generates the most views among audience, and how does that affect the rating?

### Methods

-   A bar plot is created to check the quantiles of viewing for each episode type in order to check which one is attracting the most views.
-   Summary and Viewer data sets must be combined and reduced to only contain the episode types we need along with their ratings.
-   A model is constructed to check the relationship between number of viewers and the rating given to the episode. 

### Data Checking

First, the data set needs to be checked for reunion episode being screened. There is a possibility that the season may not have screened the reunion at all. This season must be dropped from our analysis as it will have missing data.

```{r}
summary <- read_csv("Data/question3/summary_tidy.csv")
viewers <- read_csv("Data/question3/viewers_tidy.csv")

viewers_nest <- viewers %>%
  group_by(season_name, season) %>%
  nest()

viewers_nest <- viewers_nest %>%
  mutate(reunion_ep = map(.x = data, .f = ~ifelse(str_detect(.x$title, "Reunion"), "TRUE", "FALSE"))) %>%
  mutate(reunion_ep = ifelse(str_detect(reunion_ep, "TRUE"), "TRUE", "FALSE"))

viewers_nest %>%
  select(season_name,season, reunion_ep) %>%
  kable(col.names = c("Season Name", "Season", "Reunion Episode Screened"),
        caption = "Checking Data for Reunion Episode") %>%
  kable_styling() %>%
  scroll_box(width = "100%", height = "200px")

```

As we can see the data for the reunion episode for **`r viewers_nest$season_name[1]`** is not present. In order to answer the question, this row needs to be dropped due to missing values.

```{r}
viewers_nest <- viewers_nest %>%
  filter(reunion_ep == "TRUE") %>%
  select(-reunion_ep)

```


```{r}
viewers_nest <- viewers_nest %>%
  mutate(filtered = map(.x = data, ~ filter(., .x$episode %in% c(1,length(.x$episode), length(.x$episode)-1)))) %>%
  select(-data)
```

```{r}
combined <- summary %>%
  pivot_longer(cols = viewers_premier:viewers_reunion,
               names_to = "episodes",
               values_to = "viewers_num") %>%
  select(-c("premiered", "ended"))

combined["episodes"][combined["episodes"] == "viewers_premier"] <- "premier"
combined["episodes"][combined["episodes"] == "viewers_reunion"] <- "reunion"
combined["episodes"][combined["episodes"] == "viewers_finale"] <- "finale"

viewers_nest <- viewers_nest %>%
  mutate(filtered = map(.x = filtered, 
                          ~ mutate(., episodes =
                                     ifelse(.x$episode == 1, "premier",
                                            ifelse(.x$episode == .x$episode[2], "finale", "reunion"))))) %>%
  unnest() %>%
  select(-c("title", "episode_date", "episode"))

combined <- left_join(viewers_nest, combined)

```

```{r, fig.cap="Missingness Within Dataset"}
vis_miss(combined)
```

Finally, the data set needs to be verified for other missingness. There is also missingness of 8% within the rating values as seen in the above figure. This means that 8 on 100 times the rating of the episode is missing. While this can cause some disturbance, that is minor so this will be discounted.

### Analysis


```{r}
p1 <- combined %>%
  ggplot(aes(episodes, viewers_num)) +
  geom_boxplot(aes(fill = episodes)) +
  coord_flip() +
  theme_bw() +
  theme(axis.text.y = element_blank()) +
  scale_fill_discrete(name="Episode Type") +
  ylab("Number of Viewers in Millions") +
  xlab("Episode Type") +
  ggtitle("Distribution of Viewers According to Episode Type")

ggplotly(p1)
```

From the above box plot, it is obvious that the finale attracts more viewers than the premiere. The quantiles of premiere display a smaller range as opposed to the finale. Viewers also do not seem as interested in reunions as compared to the other two. The reunion seems to have a niche audience among watchers of the series.

The order of interest is thus: **Finale > Premiere > Reunion**

```{r}
combined %>%
  arrange(desc(viewers_num)) %>%
  select(season_name, season, episodes, viewers_num) %>%
  head(6) %>%
  kable(caption = "Checking Dataset for Identity of Outliers") %>%
  kable_styling()
```

Out of the 5 outliers identified from the box plot, 2 each come from **Survivor: The Australian Outback** and **Survivor: Borneo**. The last one came from the **Survivor: All-Stars**. This shows that **among the reunions, Survivor: Borneo and Survivor: The Australian Outback created the most buzz**. While **for premieres, viewers were more interested in Survivor: The Australian Outback and Survivor: All-Stars**. As for **finales, viewers were invested in Survivor: Borneo the most** in the history of Survivor.

```{r}
p2 <- combined %>%
  ggplot(aes(x = viewers_num, y = rating_18_49, colour = episodes)) +
  geom_point() +
  geom_jitter() +
  xlab("Number of Viewers in Millions") +
  ylab("Ratings per Episode") +
  ggtitle("Distribution of Ratings by Viewers of the Episode")
  
ggplotly(p2)
```

The scatter plot displays distribution of ratings according to the viewers of each episode type. While this could be called a **strong positive relationship**, however there are clearly many significant outliers. These are not biased in terms of episode type but each one of them has their own episodes that stray from the rest of the data.

```{r, fig.cap="Panel of Residual Diagnostic Plots in Linear Model"}
combined_lm <- combined %>%
  select(rating_18_49, viewers_num) %>%
  lm(rating_18_49 ~ ., data = .)

resid_panel(combined_lm)
```

Both the residuals panel as well as the scatter plot show that there are a number of outliers which are resulting in inaccurate modeling. So it is difficult to find a direct relationship between the rating and the viewers of the 3 types of episodes without trimming the outliers. The Q-Q plot shows 6 major outlier points. The residual plot also doesn't show a uniform distribution with 2 or 3 lying quite far in distance.

# Key Findings and Limitations

Reality TV shows have a cult following, including Survivor. This has led to a number of assumptions among watchers. These range from the challenges that need to be won to what would be considered the most exciting episode. This report aims to verify what factors would be considered important for contestants and makers of the show.

**A significant portion of past winners come from the 20 - 40 years age range. While city and/or state doesn't have a significant effect on winning probability, personality type does.** People with personality types - ESTP, ENTP, INFJ and ENFJ are more likely to win. The majority of these personality type are people who are energetic and outgoing individuals. These are people who can work well in teams and those could be traits that lead to a win.

A generally shared belief is that winning multiple challenges leads to staying in the competition longer. However, a surprising finding is that **while winning the challenges is seen as a sign of capability in the final round, it is not considered a significant advantage for the rest of the rounds**.

**The finale of the show generates the most interest among viewers**, while the reunion is for a more niche audience with possibly more attachment to the contestants than the show. The premiere doesn't generate as much interest either.

For future studies, there are a lot of **unused variables** that can be revisited and visualised from Survivor for better metrics and additional research questions of interests, such as vote history and tribe swapping. **Gender of castaways** could also be worth exploring, but unfortunately not recorded in the data sets used in this report, which could be introduced by adding more data sets from different sources. **Missing values and outliers** are also not accounted for in this report, they could potentially be investigated or stimulated for more precise conclusions.

# References

Hao Zhu (2021). kableExtra: Construct Complex Table with 'kable' and Pipe Syntax. R package version 1.3.4. https://CRAN.R-project.org/package=kableExtra
  
Oehm, D. (2021). survivoR. https://github.com/doehm/survivoR

Ross, D. (2019). Chris Underwood from Survivor on that shocking ending. Retrieved from https://ew.com/tv/2019/05/16/survivor-edge-of-extinction-chris-underwood-winner-season-finale/

Thomas Mock (2021). Tidy Tuesday: A weekly data project aimed at the R ecosystem. https://github.com/rfordatascience/tidytuesday.

Wickham et al., (2019). Welcome to the tidyverse. Journal of Open Source Software, 4(43), 1686, https://doi.org/10.21105/joss.01686

C. Sievert. Interactive Web-Based Data Visualization with R, plotly, and shiny. Chapman and Hall/CRC Florida, 2020.

David Robinson, Alex Hayes and Simon Couch (2021). broom: Convert Statistical Objects into Tidy Tibbles. R package version 0.7.9. https://CRAN.R-project.org/package=broom
  
Tierney N (2017). “visdat: Visualising Whole Data Frames.” _JOSS_, *2*(16), 355. doi: 10.21105/joss.00355 (URL: https://doi.org/10.21105/joss.00355), <URL: http://dx.doi.org/10.21105/joss.00355>.

Katherine Goode and Kathleen Rey (2019). ggResidpanel: Panels and Interactive Versions of Diagnostic Plots using 'ggplot2'. R package version 0.3.0. https://CRAN.R-project.org/package=ggResidpanel