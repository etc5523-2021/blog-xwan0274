total_cases,
new_cases,
total_deaths,
new_deaths,
total_tests,
new_tests,
positive_rate,
tests_per_case,
total_vaccinations,
new_vaccinations,
people_vaccinated,
people_vaccinated_per_hundred,
people_fully_vaccinated,
people_fully_vaccinated_per_hundred)
cases <- df %>%
filter(date == "2021-08-31") %>%
select(iso_code,
location,
total_cases,
new_cases,
total_deaths,
new_deaths)
details <- df %>%
filter(date == "2021-08-29") %>%
select(-c(date,
total_cases,
new_cases,
total_deaths,
new_deaths))
updates <- cases %>%
left_join(details,
by = c("iso_code", "location")) %>%
mutate(date = "End of Aug")
monthly <- df %>%
mutate(date = as.character(date)) %>%
filter(date %in% c("2021-01-31",
"2021-02-28",
"2021-03-31",
"2021-04-30",
"2021-05-31",
"2021-06-30",
"2021-07-31"))
tabledf <- do.call("rbind", list(monthly, updates))%>%
select(date,
total_cases,
total_tests,
total_deaths,
people_vaccinated_per_hundred,
people_fully_vaccinated_per_hundred) %>%
rename("Date" = date,
"Confirmed Cases" = total_cases,
"Tests Conducted" = total_tests,
"Deaths" = total_deaths,
"Vaccinated %" = people_vaccinated_per_hundred,
"Fully Vaccinated %" = people_fully_vaccinated_per_hundred)
knitr::opts_chunk$set(echo = FALSE)
library(tidyverse)
library(formattable)
library(DT)
chile <- read_csv("chile.csv") %>%
select(-...1)
View(chile)
tabledf2 <- chile %>%
select(date,
new_cases,
total_cases,
new_deaths,
total_deaths,
new_tests,
total_tests)
View(tabledf2)
library(tidyverse)
library(formattable)
library(DT)
datatable(tabledf2,
pageLength = 10)
datatable(tabledf2)
datatable(tabledf2,
options = list(initComplete = JS(
"function(settings, json) {",
"$(this.api().table().header()).css({'background-color': '#000', 'color': '#fff'});",
"}"
)))
datatable(tabledf2,
options = list(initComplete = JS(
"function(settings, json) {",
"$(this.api().table().header()).css({'background-color': '#616C6E', 'color': '#fff'});",
"}"))
)
datatable(tabledf2,
options = list(initComplete = JS(
"function(settings, json) {",
"$(this.api().table().header()).css({'background-color': '#9a5f51', 'color': '#fff'});",
"}"))
)
datatable(tabledf2,
options = list(initComplete = JS(
"function(settings, json) {",
"$(this.api().table().header()).css({'background-color': '#9e6b62', 'color': '#fff'});",
"}"))
)
datatable(tabledf2,
options = list(initComplete = JS(
"function(settings, json) {",
"$(this.api().table().header()).css({'background-color': '#a16058', 'color': '#fff'});",
"}"))
)
datatable(tabledf2,
options = list(initComplete = JS(
"function(settings, json) {",
"$(this.api().table().header()).css({'background-color': '#404b5d', 'color': '#fff'});",
"}"))
)
datatable(tabledf2,
options = list(initComplete = JS(
"function(settings, json) {",
"$(this.api().table().header()).css({'background-color': '#404b5d', 'color': '#fff'});",
"}")),
options = list(pageLength = 10)
)
datatable(tabledf2,
options = list(initComplete = JS(
"function(settings, json) {",
"$(this.api().table().header()).css({'background-color': '#404b5d', 'color': '#fff'});",
"}"),
pageLength = 10)
)
datatable(tabledf2,
options = list(initComplete = JS(
"function(settings, json) {",
"$(this.api().table().header()).css({'background-color': '#404b5d', 'color': '#fff'});",
"}"),
pageLength = 5)
)
datatable(tabledf2,
options = list(initComplete = JS(
"function(settings, json) {",
"$(this.api().table().header()).css({'background-color': '#404b5d', 'color': '#fff'});",
"}"),
pageLength = 7)
)
datatable(tabledf2,
options = list(initComplete = JS(
"function(settings, json) {",
"$(this.api().table().header()).css({'background-color': '#404b5d', 'color': '#fff'});",
"}"),
pageLength = 7,
autoWidth = TRUE)
)
datatable(tabledf2,
options = list(initComplete = JS(
"function(settings, json) {",
"$(this.api().table().header()).css({'background-color': '#404b5d', 'color': '#fff'});",
"}"),
pageLength = 7,
scrollX = TRUE)
)
datatable(tabledf2,
colnames = c("Date", "New Cases", "Total Cases", "New Deaths", "Total Deaths",
"New Tests", "Total Tests"),
options = list(initComplete = JS(
"function(settings, json) {",
"$(this.api().table().header()).css({'background-color': '#404b5d', 'color': '#fff'});",
"}"),
pageLength = 10,
scrollX = TRUE)
)
datatable(tabledf2,
colnames = c("Date", "New Cases", "Total Cases", "New Deaths", "Total Deaths",
"New Tests", "Total Tests"),
options = list(initComplete = JS(
"function(settings, json) {",
"$(this.api().table().header()).css({'background-color': '#404b5d', 'color': '#fff'});",
"}"),
pageLength = 10,
scrollX = TRUE,
autoWidth = TRUE)
)
datatable(tabledf2,
colnames = c("Date", "New Cases", "Total Cases", "New Deaths", "Total Deaths",
"New Tests", "Total Tests"),
options = list(initComplete = JS(
"function(settings, json) {",
"$(this.api().table().header()).css({'background-color': '#404b5d', 'color': '#fff'});",
"}"),
pageLength = 10,
scrollX = TRUE,
autoWidth = TRUE,
columnDefs = list(list(className = "dt-center", targets = 1:6)))
)
datatable(tabledf2,
colnames = c("Date", "New Cases", "Total Cases", "New Deaths", "Total Deaths",
"New Tests", "Total Tests"),
options = list(initComplete = JS(
"function(settings, json) {",
"$(this.api().table().header()).css({'background-color': '#404b5d', 'color': '#fff'});",
"}"),
pageLength = 10,
scrollX = TRUE,
autoWidth = TRUE,
columnDefs = list(list(className = "dt-center", targets = "_all")))
)
datatable(tabledf2,
colnames = c("Date", "New Cases", "Total Cases", "New Deaths", "Total Deaths",
"New Tests", "Total Tests"),
options = list(initComplete = JS(
"function(settings, json) {",
"$(this.api().table().header()).css({'background-color': '#404b5d', 'color': '#fff'});",
"}"),
pageLength = 10,
scrollX = TRUE,
autoWidth = TRUE,
columnDefs = list(list(className = "dt-center", targets = 2:7),
list(className = "dt-left", targets = 1)))
)
datatable(tabledf2,
colnames = c("Date", "New Cases", "Total Cases", "New Deaths", "Total Deaths",
"New Tests", "Total Tests"),
options = list(initComplete = JS(
"function(settings, json) {",
"$(this.api().table().header()).css({'background-color': '#404b5d', 'color': '#fff'});",
"}"),
pageLength = 10,
scrollX = TRUE,
columnDefs = list(list(className = "dt-center", targets = 2:7),
list(className = "dt-left", targets = 1),
list(width = "110%", targets = 1)))
)
datatable(tabledf2,
colnames = c("Date", "New Cases", "Total Cases", "New Deaths", "Total Deaths",
"New Tests", "Total Tests"),
options = list(initComplete = JS(
"function(settings, json) {",
"$(this.api().table().header()).css({'background-color': '#404b5d', 'color': '#fff'});",
"}"),
pageLength = 10,
scrollX = TRUE,
columnDefs = list(list(className = "dt-center", targets = 2:7),
list(className = "dt-left", targets = 1),
list(width = "100%", targets = 1)))
)
datatable(tabledf2,
colnames = c("Date", "New Cases", "Total Cases", "New Deaths", "Total Deaths",
"New Tests", "Total Tests"),
options = list(initComplete = JS(
"function(settings, json) {",
"$(this.api().table().header()).css({'background-color': '#404b5d', 'color': '#fff'});",
"}"),
pageLength = 10,
scrollX = TRUE,
columnDefs = list(list(className = "dt-center", targets = 2:7),
list(className = "dt-left", targets = 1),
list(width = "70%", targets = 1)))
)
datatable(tabledf2,
colnames = c("Date", "New Cases", "Total Cases", "New Deaths", "Total Deaths",
"New Tests", "Total Tests"),
options = list(initComplete = JS(
"function(settings, json) {",
"$(this.api().table().header()).css({'background-color': '#404b5d', 'color': '#fff'});",
"}"),
pageLength = 10,
scrollX = TRUE,
columnDefs = list(list(className = "dt-center", targets = 2:7),
list(className = "dt-left", targets = 1),
list(width = "40%", targets = 1)))
)
datatable(tabledf2,
colnames = c("Date", "New Cases", "Total Cases", "New Deaths", "Total Deaths",
"New Tests", "Total Tests"),
options = list(initComplete = JS(
"function(settings, json) {",
"$(this.api().table().header()).css({'background-color': '#404b5d', 'color': '#fff'});",
"}"),
pageLength = 10,
scrollX = TRUE,
columnDefs = list(list(className = "dt-center", targets = 2:7),
list(className = "dt-left", targets = 1),
list(width = "10%", targets = 1)))
)
datatable(tabledf2,
colnames = c("Date", "New Cases", "Total Cases", "New Deaths", "Total Deaths",
"New Tests", "Total Tests"),
options = list(initComplete = JS(
"function(settings, json) {",
"$(this.api().table().header()).css({'background-color': '#404b5d', 'color': '#fff'});",
"}"),
pageLength = 10,
scrollX = TRUE,
columnDefs = list(list(className = "dt-center", targets = 2:7),
list(className = "dt-left", targets = 1),
list(width = "20%", targets = 1)))
)
datatable(tabledf2,
colnames = c("Date", "New Cases", "Total Cases", "New Deaths", "Total Deaths",
"New Tests", "Total Tests"),
options = list(initComplete = JS(
"function(settings, json) {",
"$(this.api().table().header()).css({'background-color': '#404b5d', 'color': '#fff'});",
"}"),
pageLength = 10,
scrollX = TRUE,
columnDefs = list(list(className = "dt-center", targets = 2:7),
list(className = "dt-left", targets = 1),
list(width = "15%", targets = 1)))
)
datatable(tabledf2,
colnames = c("Date", "New Cases", "Total Cases", "New Deaths", "Total Deaths",
"New Tests", "Total Tests"),
options = list(initComplete = JS(
"function(settings, json) {",
"$(this.api().table().header()).css({'background-color': '#404b5d', 'color': '#fff'});",
"}"),
pageLength = 10,
scrollX = TRUE,
columnDefs = list(list(className = "dt-center", targets = 2:7),
list(className = "dt-left", targets = 1),
list(width = "12%", targets = 1)))
)
datatable(tabledf2,
colnames = c("Date", "New Cases", "Total Cases", "New Deaths", "Total Deaths",
"New Tests", "Total Tests"),
options = list(initComplete = JS(
"function(settings, json) {",
"$(this.api().table().header()).css({'background-color': '#404b5d', 'color': '#fff'});",
"}"),
pageLength = 10,
scrollX = TRUE,
columnDefs = list(list(className = "dt-center", targets = 2:7),
list(className = "dt-left", targets = 1),
list(width = "13%", targets = 1)))
)
View(monthly)
tabledf1 <- monthly %>%
select(date,
tests_per_case,
positive_rate,
people_vaccinated,
people_fully_vaccinated)
library(tidyverse)
library(formattable)
library(DT)
library(gt)
monthly %>%
select(date,
tests_per_case,
positive_rate,
people_vaccinated,
people_fully_vaccinated) %>%
gt()
View(monthly)
View(tabledf)
tabledf %>%
select(date,
tests_per_case,
positive_rate,
people_vaccinated,
people_fully_vaccinated) %>%
gt()
cases <- chile %>%
filter(date == "2021-08-31") %>%
select(iso_code,
location,
total_cases,
new_cases,
total_deaths,
new_deaths)
details <- chile %>%
filter(date == "2021-08-29") %>%
select(-c(date,
total_cases,
new_cases,
total_deaths,
new_deaths))
updates <- cases %>%
left_join(details,
by = c("iso_code", "location")) %>%
mutate(date = "End of Aug")
monthly <- chile %>%
mutate(date = as.character(date)) %>%
filter(date %in% c("2021-01-31",
"2021-02-28",
"2021-03-31",
"2021-04-30",
"2021-05-31",
"2021-06-30",
"2021-07-31"))
sumtable <- do.call("rbind", list(monthly, updates))
tabledf <-sumtable %>%
select(date,
total_cases,
total_tests,
total_deaths,
people_vaccinated_per_hundred,
people_fully_vaccinated_per_hundred) %>%
rename("Date" = date,
"Confirmed Cases" = total_cases,
"Tests Conducted" = total_tests,
"Deaths" = total_deaths,
"Vaccinated %" = people_vaccinated_per_hundred,
"Fully Vaccinated %" = people_fully_vaccinated_per_hundred)
sumtable %>%
select(date,
tests_per_case,
positive_rate,
people_vaccinated,
people_fully_vaccinated) %>%
gt()
tabledf1 <- sumtable %>%
select(date,
tests_per_case,
positive_rate,
people_vaccinated,
people_fully_vaccinated) %>%
gt() %>%
tab_header(title = "Positive Rate by Tests Dropped to 0.01 with Over 14 Million People Vaccinated",
subtitle = "Most Recent Updates Recorded in the End of August 2021")
tabledf1
tabledf1 <- sumtable %>%
select(date,
tests_per_case,
positive_rate,
people_vaccinated,
people_fully_vaccinated) %>%
gt() %>%
tab_header(title = "Positive Rate by Tests Dropped to 0.01 with Over 14 Million People Vaccinated",
subtitle = "Most Recent Updates Recorded in the End of August 2021") %>%
cols_align(align = "center",
columns = 2:5)
tabledf1
tabledf1 <- sumtable %>%
select(date,
tests_per_case,
positive_rate,
people_vaccinated,
people_fully_vaccinated) %>%
gt() %>%
tab_header(title = "Positive Rate by Tests Dropped to 0.01 with Over 14 Million People Vaccinated",
subtitle = "Most Recent Updates Recorded in the End of August 2021") %>%
cols_align(align = "center",
columns = 2:5) %>%
tab_source_note(md("Source: 2021 *Our World in Data*"))
tabledf1
tabledf1 <- sumtable %>%
select(date,
tests_per_case,
positive_rate,
people_vaccinated,
people_fully_vaccinated) %>%
gt() %>%
tab_header(title = "Positive Rate by Tests Dropped to 0.01 with Over 14 Million People Vaccinated",
subtitle = "Most Recent Updates Recorded in the End of August 2021") %>%
cols_align(align = "center",
columns = 2:5) %>%
tab_source_note(md("Source: 2021 *Our World in Data*")) %>%
cols_label(date = html("Date<br>(yyyy/mm/dd)"),
tests_per_case = html("Tests per Case"),
positive_rate = html("Positive Rate"),
people_vaccinated = html("Vaccinated"),
people_fully_vaccinated = html("Fully Vaccinated"))
tabledf1
tabledf1 <- sumtable %>%
select(date,
tests_per_case,
positive_rate,
people_vaccinated,
people_fully_vaccinated) %>%
gt() %>%
tab_header(title = "Positive Rate by Tests Dropped to 0.01 with Over 14 Million People Vaccinated",
subtitle = "Most Recent Updates Recorded in the End of August 2021") %>%
cols_align(align = "center",
columns = 2:5) %>%
tab_source_note(md("Source: 2021 *Our World in Data*")) %>%
cols_label(date = html("Date"),
tests_per_case = html("Tests per Case"),
positive_rate = html("Positive Rate"),
people_vaccinated = html("Vaccinated"),
people_fully_vaccinated = html("Fully Vaccinated"))
tabledf1
tabledf2 <- chile %>%
select(date,
new_cases,
total_cases,
new_deaths,
total_deaths,
new_tests,
total_tests)
datatable(tabledf2,
colnames = c("Date", "New Cases", "Total Cases", "New Deaths", "Total Deaths",
"New Tests", "Total Tests"),
options = list(initComplete = JS(
"function(settings, json) {",
"$(this.api().table().header()).css({'background-color': '#404b5d', 'color': '#fff'});",
"}"),
pageLength = 10,
scrollX = TRUE,
columnDefs = list(list(className = "dt-center", targets = 2:7),
list(className = "dt-left", targets = 1),
list(width = "15%", targets = 1)))
)
formattable(tabledf,
align = c("l", "c", "c", "c", "r", "r"),
list(`Date` = formatter("span",
style = ~style(color = "grey",
font.weight = "bold")),
`Confirmed Cases` = color_tile("transparent", "tomato"),
`Tests Conducted` = color_tile("transparent", "steelblue3"),
`Deaths` = color_tile("transparent", "lightcoral"),
`Vaccinated %` = color_bar("lightgreen"),
`Fully Vaccinated %` = color_bar("limegreen")))
View(chile)
View(df)
